// First up: config and functions
@import 'config';

// Disable util class generator because we'll render them at the end
$generate-utility-classes: false;

// Next: pull in gorko for design tokens
@import '../../node_modules/gorko/gorko.scss';

@import 'reset';

// Global styles start

body {
  display: flex;
  flex-direction: column;
  background: get-color('light');
  color: get-color('dark');
  line-height: 1.5;
  font-size: get-size('400');
  overflow-x: hidden;

  @include apply-utility('font', 'base');
}

main {
  flex: auto;
}

* {
  cursor: url('/images/cursor.svg'), auto;
}

a:not([class]) {
  color: currentColor;
}

:focus {
  outline: 2px dashed get-color('primary');
  outline-offset: 0.25rem;
}

main:focus {
  outline: none;
}

h1,
h2,
h3,
h4 {
  font-weight: 400;
  @include apply-utility('leading', 'flat');
}

h1 {
  font-size: get-size('800');
}

h2 {
  font-size: get-size('700');
}

h3 {
  font-size: get-size('600');
}

h4 {
  font-size: get-size('500');
}

em {
  font-style: normal;
  text-decoration: underline;
  text-decoration-color: get-color('primary');
  text-decoration-thickness: 1ex;
  text-underline-offset: -1.25ex;
  text-decoration-skip-ink: none;
  // To enable this in webkit, uncomment
  // text-decoration-skip: none;
}

a:not([class]) {
  color: get-color('secondary');

  &:hover {
    text-decoration: none;
  }
}

ul:not([role]) {
  padding: 0 0 0 1.2em;
}

ol:not([role]) {
  padding: 0 0 0 2.2em;

  @include apply-utility('font', 'mono');
}

ul:not([role]),
ol:not([role]) {
  @include apply-utility('font', 'mono');

  > * + * {
    margin-top: 0.5em;
  }
}

p,
li,
blockquote {
  @include apply-utility('measure', 'long');
}

input,
textarea {
  font-size: get-size('300');
  padding: 1em;
  border: none;

  @include apply-utility('font', 'mono');
}

marquee {
  text-transform: uppercase;

  ul,
  li {
    list-style: none;
    display: flex;
    align-items: center;
    gap: 0.5em;
  }

  ul:not([class]) > li + li {
    margin-top: 0;
  }

  li + li::before {
    content: 'Â·';
    color: get-color('secondary');
    font-size: 2em;
  }
}

::selection {
  background: get-color('dark');
  color: get-color('light');
}

// Import compositions
@import 'compositions/blog-landing-page';
@import 'compositions/contact-page';
@import 'compositions/content-page';
@import 'compositions/headline';
@import 'compositions/hero';
@import 'compositions/landing-page';
@import 'compositions/sidebar';
@import 'compositions/splitter';

// Import decorative stuff
@import 'decor/fade-in';
@import 'decor/tv-decor';
@import 'decor/circle-text';

// Import blocks
@import 'blocks/audio-toggle';
@import 'blocks/brand';
@import 'blocks/burger-menu';
@import 'blocks/button';
@import 'blocks/eyebrow';
@import 'blocks/form-group';
@import 'blocks/generic-content';
@import 'blocks/link-button';
@import 'blocks/post-item';
@import 'blocks/site-foot';
@import 'blocks/site-head';
@import 'blocks/skip-link';
@import 'blocks/toggle-caption';

// Import utilities
@import 'utilities/dot';
@import 'utilities/flow';
@import 'utilities/line-highlight';
@import 'utilities/visually-hidden';
@import 'utilities/wrapper';

// Render gorko utilities
@include generate-utility-classes();
